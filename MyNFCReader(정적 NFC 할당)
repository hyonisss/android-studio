<ManiFest.xml>
<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    package="com.android.scsa.andr.mynfcreader">

    <application
        android:allowBackup="true"
        android:icon="@mipmap/ic_launcher"
        android:label="@string/app_name"
        android:roundIcon="@mipmap/ic_launcher_round"
        android:supportsRtl="true"
        android:theme="@style/Theme.MyNFCReader">
        <activity android:name=".MainActivity">
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />

                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
            <!-- NFC 관련 인텐트 필터 등록 .. -->
            <intent-filter>
                <action android:name="android.nfc.action.NDEF_DISCOVERED" />
                <data android:mimeType="text/plain"/>
                <category android:name="android.intent.category.DEFAULT" />
            </intent-filter>
            <intent-filter>
                <action android:name="android.nfc.action.NDEF_DISCOVERED" />
                <data android:scheme="https"/>
                <category android:name="android.intent.category.DEFAULT" />
            </intent-filter>
            <intent-filter>
                <action android:name="android.nfc.action.NDEF_DISCOVERED" />
                <data android:scheme="http"/>
                <category android:name="android.intent.category.DEFAULT" />
            </intent-filter>
        </activity>
    </application>

</manifest>

=========================================================================================
<MainActivity.java>

package com.android.scsa.andr.mynfcreader;

import androidx.appcompat.app.AppCompatActivity;

import android.content.Intent;
import android.net.Uri;
import android.nfc.NdefMessage;
import android.nfc.NdefRecord;
import android.nfc.NfcAdapter;
import android.os.Bundle;
import android.os.Parcelable;
import android.util.Log;
import android.widget.TextView;

public class MainActivity extends AppCompatActivity {
    TextView myTv;
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        myTv = findViewById(R.id.myTv);

        //NFC 관련 인텐트 수신
        Intent recI = getIntent();
        String action = recI.getAction();
        //myTv.setText("action : " + action);
        //main 안죽게 하는 방법
        if(action.equals(NfcAdapter.ACTION_NDEF_DISCOVERED)) {
            processIntent(recI);
        }
    }

    private void processIntent(Intent i) {

        //1. NFC Tag에 저장된 NdefMessage 배열 데이터를 가져온다...
        Parcelable[] rawData = i.getParcelableArrayExtra(NfcAdapter.EXTRA_NDEF_MESSAGES);
        //2. 첫번째 NdefMessage를 가져온다
        NdefMessage ndefMsg = (NdefMessage) rawData[0];
        //3. NdefMessage[0]에 저장된 NdefMessage 배열 데이터를 가져온다...
        NdefRecord[] recArr = ndefMsg.getRecords();
        //4. 첫번째 NdefRecord를 가져온다
        NdefRecord ndefRec = recArr[0];

        //url 또는 text로 작성된 태그를 태깅했을 때 tag안에 저장된 데이터를 TextView에 표출해 보세요
        //NdefRecord의 타입 체크 : T : text, U : URI(url, sms, tel 등 포함...)
        String type = new String(ndefRec.getType());
        Log.i("INFO", "type : "+ type);
        if(type.equals("T")) {
            //데이터 꺼내기
            byte[] byteData = ndefRec.getPayload();
            //String type으로 바꿈
            String strData = new String(byteData, 3, byteData.length-3);
            myTv.setText("Data : "+strData);
        } else if(type.equals("U")) {
            myTv.setText("Data : "+ndefRec.toUri().toString());
        }

    }
}
